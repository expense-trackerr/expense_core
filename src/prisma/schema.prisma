// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum CategoryTypeName {
  Income
  Expense
}

model User {
  id              String          @id
  name            String
  email           String          @unique
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt
  categories      Category[]
  linked_accounts LinkedAccount[]
  transactions    Transaction[]

  @@map("user")
}

model LinkedAccount {
  item_id          String             @id
  name             String
  alias_name       String?
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt
  access_token     String             @unique
  users            User               @relation(fields: [user_id], references: [id])
  user_id          String
  transactions     Transaction[]
  LinkedSubAccount LinkedSubAccount[]

  @@map("linked_account")
}

model LinkedSubAccount {
  account_id             String        @id
  name                   String
  alias_name             String?
  balance                Decimal?      @db.Decimal(10, 2)
  created_at             DateTime      @default(now())
  updated_at             DateTime      @updatedAt
  linked_account         LinkedAccount @relation(fields: [linked_account_item_id], references: [item_id])
  linked_account_item_id String
}

model CategoryType {
  id         String           @id @default(uuid())
  name       CategoryTypeName
  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt
  categories Category[]

  @@map("category_type")
}

model Category {
  id               String        @id @default(uuid())
  name             String
  budget           Decimal?      @db.Decimal(10, 2)
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt
  User             User          @relation(fields: [user_id], references: [id])
  user_id          String
  transactions     Transaction[]
  category_type    CategoryType  @relation(fields: [category_type_id], references: [id])
  category_type_id String

  @@map("category")
}

model Transaction {
  id                     String         @id @default(uuid())
  date                   DateTime
  name                   String
  amount                 Decimal        @db.Decimal(10, 2)
  created_at             DateTime       @default(now())
  updated_at             DateTime       @updatedAt
  category               Category?      @relation(fields: [category_id], references: [id])
  category_id            String?
  User                   User           @relation(fields: [user_id], references: [id])
  user_id                String
  linked_account         LinkedAccount? @relation(fields: [linked_account_item_id], references: [item_id])
  linked_account_item_id String?

  @@map("transaction")
}
